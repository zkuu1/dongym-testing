generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  role          String?     @default("user")
  membershipId  String?
  password      String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  accounts      Account[]
  membership    Membership?
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Membership {
  id        String   @id @default(cuid())
  endDate   DateTime
  startDate DateTime
  status    String
  type      String
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
}

model Absensi {
  
  id         Int      @id @default(autoincrement())
  name       String
  no_member  String?   
  status_kunjungan String    
  tanggal_kunjungan    DateTime  @default(now())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  
}
